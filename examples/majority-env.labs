# Adapted from 
# https://peregrine.model.in.tum.de/demo/

# Original description:
# This protocol takes a majority vote. More precisely, it (attempts to) compute
# whether there are initially more agents in state Y than N. The protocol has
# only 3 states, but does not always converge to the correct consensus.
# Described in Dana Angluin, James Aspnes and David Eisenstat. A Simple
# Population Protocol for Fast Robust Approximate Majority. Distributed
# Computing, vol. 21, issue 2, pp. 87â€“102, 2008.

# 0 = N, 1 = Y, 2 = b

system {
    extern = _yes, _no
    environment = agent: -1; message: undef
    spawn = Yes: _yes, No: _no
    Protocol =
        (
            (agent != id and opinion != 2 -> agent, message <-- id, opinion)
            ++
            (agent != id ->
                (message = opinion -> Skip) ++
                (message = 1 and opinion = 2 -> opinion <- 1) ++
                (message = 1 and opinion = 0 -> opinion <- 2) ++
                (message = 0 and opinion = 1 -> opinion <- 2) ++
                (message = 0 and opinion = 2 -> opinion <- 1))
        ); Protocol
}

agent Yes {
    interface = opinion: 1
  
    Behavior = Protocol
}

agent No {
    interface = opinion: 0
  
    Behavior = Protocol
}

check {
    #NoUndecided = finally forall Yes y, forall No n, 
    #opinion of y != 2 and opinion of n != 2

    NotAllYes = finally exists Yes y, exists No n, 
    opinion of y != 1 or opinion of n != 1
    #AllYes = finally forall Yes y, forall No n, 
    #opinion of y = 1 and opinion of n = 1

}