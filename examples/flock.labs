system {
    extern = _birds, _grid, _delta
    spawn = Bird: _birds
    link = ((x of c1 - x of c2) * (x of c1 - x of c2)) + 
        ((y of c1 - y of c2) * (y of c1 - y of c2)) <= _delta * _delta

    # "Global" processes
    Movex = x <- (x + dirx) % _grid
    Movey = y <- (y + diry) % _grid

}

agent Bird {
    interface = x: 0.._grid, y: 0.._grid
    stigmergy = <dirx: [-1, 1], diry: [-1,1]>
    
    # "Local" processes (can only be used by component Bird)
    Behavior = (Movex & Movey); Behavior
}

check {
    Px = finally forall Bird b1, forall Bird b2, dirx of b1 = dirx of b2
    Py = finally forall Bird b1, forall Bird b2, diry of b1 = diry of b2
}